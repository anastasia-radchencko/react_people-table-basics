{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleItem/PeopleItem.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleItem","useParams","born","died","motherName","fatherName","mother","father","isActive","PeopleTable","people","map","findPersonByName","peopleToFindFrom","nameToFind","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","isListEmpty","length","loadPeople","useCallback","peopleFromServer","preparedPeople","personCopy","useEffect","HomePage","NotFoundPage","PageNavLink","text","NavBar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ec85b716.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleItem: React.FC<Props> = ({ person }) => {\n  const { slug = '' } = useParams();\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n  const isActive = slug === person.slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': isActive })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{mother ? <PersonLink person={mother} /> : (motherName || '-')}</td>\n      <td>{father ? <PersonLink person={father} /> : (fatherName || '-')}</td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PeopleItem } from '../PeopleItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PeopleItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\n\nconst findPersonByName = (\n  peopleToFindFrom: Person[],\n  nameToFind: string | null,\n) => {\n  if (nameToFind) {\n    return peopleToFindFrom.find(({ name }) => name === nameToFind);\n  }\n\n  return undefined;\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const isListEmpty = !people.length && !isLoading && !isError;\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const peopleFromServer = await getPeople();\n\n      const preparedPeople = peopleFromServer.map(person => {\n        const personCopy = { ...person };\n\n        personCopy.mother = findPersonByName(\n          peopleFromServer,\n          person.motherName,\n        );\n        personCopy.father = findPersonByName(\n          peopleFromServer,\n          person.fatherName,\n        );\n\n        return personCopy;\n      });\n\n      setPeople(preparedPeople);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {(!isLoading && !isListEmpty) && <PeopleTable people={people} />}\n\n          {isError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {isListEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'navbar-item has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}